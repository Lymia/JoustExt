(Nyuroki Magical Fantasy #esoteric version by Lymia Aluysia
 Released under the terms of MIT license

 Source code at http://github.com/Lymia/JoustExt/blob/master/examples/nyuroki-esoteric.jx

 This bot is pretty simple, really, despite its long code. It rushes to position 8, and starts setting
 up decoys. If it sees an already set cell when its setting up its small decoys, it immediately cancel
 setting up decoys, and go straight to its clear loop. Otherwise, it sets up some more decoys like a
 traditional slow rush, and then jumps straight to cell 14-- assuming that smaller tapes would be caught
 during the decoy setting loops.
 
 The actual clear loop isn't very special. It checks the cell twice to deal with stuff like anticipation
 and stealth, then does an offset clear of size 10. In the two-cycle clear, if after 500 cycles, the
 cell is still not cleared, it assumes its being locked and switches to an opposite polarity three-cycle
 clear.)*0

(>)*8[(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+>([(-)*10([+{[-...]}][-...]+)%500])*2)%500])*2)*2)%500])*2)*3)%500])*2)*4)%500])*2)*5)%500])*2)*6)%500])*2)*7)%500])*2)*8)%500])*2)*9)%500])*2)*10)%500])*2)*11)%500])*2)*12)%500])*2)*13)%500])*2)*14)%500])*2)*15)%500])*2)*16)%500])*2)*17)%500])*2)*18)%500])*2)*19)%500])*2)*20)%500])*2)*21](+)*5<[>(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+>([(-)*10([+{[-...]}][-...]+)%500])*2)%500])*2)*2)%500])*2)*3)%500])*2)*4)%500])*2)*5)%500])*2)*6)%500])*2)*7)%500])*2)*8)%500])*2)*9)%500])*2)*10)%500])*2)*11)%500])*2)*12)%500])*2)*13)%500])*2)*14)%500])*2)*15)%500])*2)*16)%500])*2)*17)%500])*2)*18)%500])*2)*19)%500])*2)*20)%500])*2)*21](-)*5<[>>(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+>([(-)*10([+{[-...]}][-...]+)%500])*2)%500])*2)*2)%500])*2)*3)%500])*2)*4)%500])*2)*5)%500])*2)*6)%500])*2)*7)%500])*2)*8)%500])*2)*9)%500])*2)*10)%500])*2)*11)%500])*2)*12)%500])*2)*13)%500])*2)*14)%500])*2)*15)%500])*2)*16)%500])*2)*17)%500])*2)*18)%500])*2)*19)%500])*2)*20)%500])*2)*21](+)*5<[>>>(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+>([(-)*10([+{[-...]}][-...]+)%500])*2)%500])*2)*2)%500])*2)*3)%500])*2)*4)%500])*2)*5)%500])*2)*6)%500])*2)*7)%500])*2)*8)%500])*2)*9)%500])*2)*10)%500])*2)*11)%500])*2)*12)%500])*2)*13)%500])*2)*14)%500])*2)*15)%500])*2)*16)%500])*2)*17)%500])*2)*18)%500])*2)*19)%500])*2)*20)%500])*2)*21](-)*5<[>>>>(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+>([(-)*10([+{[-...]}][-...]+)%500])*2)%500])*2)*2)%500])*2)*3)%500])*2)*4)%500])*2)*5)%500])*2)*6)%500])*2)*7)%500])*2)*8)%500])*2)*9)%500])*2)*10)%500])*2)*11)%500])*2)*12)%500])*2)*13)%500])*2)*14)%500])*2)*15)%500])*2)*16)%500])*2)*17)%500])*2)*18)%500])*2)*19)%500])*2)*20)%500])*2)*21](+)*51<(-)*51<(-)*51<(+)*51<(-)*19>>>>>(-)*20>(+)*20>(-)*20>(+)*20(>)*4(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+(>([(-)*10([+{[-...]}][-...]+>([(-)*10([+{[-...]}][-...]+)%500])*2)%500])*2)*2)%500])*2)*3)%500])*2)*4)%500])*2)*5)%500])*2)*6)%500])*2)*7)%500])*2)*8)%500])*2)*9)%500])*2)*10)%500])*2)*11)%500])*2)*12)%500])*2)*13)%500])*2)*14)%500])*2)*15)%500])*2)*16)%500])*2)*17)%500])*2)*18)%500])*2)*19)%500])*2)*20)%500])*2)*21
