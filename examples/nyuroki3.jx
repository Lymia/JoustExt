raw +margins "|Nyuroki Magical Fantasy rev 3 by Lymia Aluysia
              |Released under the terms of MIT license
              |
              |Source code can be found at: ( http:/" raw +margins "/github.com/Lymia/JoustExt/blob/master/examples/nyuroki3.jx )*0
              |
              |(Shameless RNG hill fitting: 4)
              |"


$is_fallback = 0
$panicked = 0

@antishudder() {
  defer {
    $kind = 1~2
    if ($kind == 1) {
      [--..-+]
    } else {
      [-++--.]
    }
  }
}
@rushbody_inner() {
  (-)*$offset
  ([
    +
    raw "{}"

    @antishudder()

    if($is_unusual_rush == 1) {
      @slowrush()
    } else {
      @break()
    }
  ])*(1750~2250)
}
@rushbody($first, $offset, $check_times) {
  reset {
    (
      callcc(@break) {
        ([
          if(1~2 == 1) {
            @rushbody_inner()
          } else {
            invert {
              @rushbody_inner()
            }
          }
        ])*$check_times
      }

      defer { (.)*(0~1) }

      (-)*$start_trail

      >
    )*21
  }
}

@marksection() {
  if ($is_fallback == 0) {
    $is_fallback = 1
    raw +margins "|
                  |"
    raw "  " @label() raw": " @section()
    raw +margins "|
                  |"
  } else {
    @section()
  }
}

@slowrush() {
  // We set up decoys, play this safe and legit.
  $start_trail = 2
  $is_unusual_rush = 0

  @label() { raw "Main attack loop" }
  @section() { > @rushbody(1, 20, 2) }
  @marksection()
}
@fastrush() {
  // Fast rush happens on short tapes.
  $start_trail = 1
  $is_unusual_rush = 1

  @label() { raw "Fast rush loop" }
  @section() { > @rushbody(1, 4, 2) }
  @marksection()
}
@panicrush() {
  // Panic rush happens before the opponent can possibly have zeroed their flag.
  $start_trail = 0
  $is_unusual_rush = 1
  $panicked = 1

  @label() { raw "Panic rush loop" }
  @section() { > @rushbody(1, 2, 1) }
  @marksection()
}

reset {
  $tripwire_decoy_height = 1
  $home_lock_length = 17
  $decoy_add_height = 15

  (>)*8
   [        @panicrush()](+)*9
  <[      > @panicrush()](-)*$tripwire_decoy_height
  <[     >> @panicrush()](+)*$tripwire_decoy_height
  <[    >>> @panicrush()](-)*$tripwire_decoy_height
  <[   >>>> @panicrush()](+)*66
  <[  >>>>>>@fastrush ()](-)*51
  <[ >>>>>>>@fastrush ()](-)*40
  <[>>>>>>>>@fastrush ()](+)*40

  // A short probabilistic lock to give us room to breathe on very short tapes.
  // 2-cycles that set no decoys clear us right about now.
  <(+)*$home_lock_length(-)*$home_lock_length

  // Advance past our long decoys
  >>>>

  // We are now at the start of the small decoys. They double as tripwires
  > (+)*$tripwire_decoy_height [raw " (broken decoy) " >>> (>)*6 @slowrush()] (-)*$decoy_add_height
  > (-)*$tripwire_decoy_height [raw " (broken decoy) " >>  (>)*6 @slowrush()] (+)*$decoy_add_height
  > (+)*$tripwire_decoy_height [raw " (broken decoy) " >   (>)*6 @slowrush()] (-)*$decoy_add_height
  >
  (>)*8 // violate rule of 9
  @slowrush()
}
